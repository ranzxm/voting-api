{
    "openapi": "3.0.3",
    "info": {
        "title": "User API",
        "description": "User API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/users": {
            "post": {
                "description": "User register endpoint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestBodyUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful register response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data" : {
                                            "$ref": "#/components/schemas/PropertiesUser"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success register user!"
                                        },
                                        "status_code" : {
                                            "type": "number",
                                            "example": 201
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "description": "User login endpoint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PropertiesUser"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Success message",
                                            "example": "Login successful"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "General validation error message",
                                            "example": "Validation errors occurred."
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 400
                                        }
                                    },
                                    "required": [
                                        "errors",
                                        "message",
                                        "status"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "description": "User current logged in endpoint",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer abc123xyz"
                        },
                        "description": "JWT token required to authenticate the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user details response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PropertiesUser"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Success message",
                                            "example": "User details fetched successfully"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 200
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "message",
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            },
            "patch": {
                "description": "User update endpoint",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer abc123xyz"
                        },
                        "description": "JWT token required to authenticate the request"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestBodyUserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PropertiesUser"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Success message",
                                            "example": "User updated successfully"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 200
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "message",
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    }
                }
            }
        },
        "/api/users/logout": {
            "delete": {
                "description": "User logout endpoint",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer abc123xyz"
                        },
                        "description": "JWT token required to authenticate the request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Success message",
                                            "example": "User logged out successfully"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 200
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error message",
                                            "example": "Unauthorized"
                                        },
                                        "status": {
                                            "type": "number",
                                            "description": "Status code",
                                            "example": 401
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "status"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RequestBodyUser" : {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "securePassword123"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "RequestBodyUserUpdate" : {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "securePassword123"
                    }
                }
            },
            "PropertiesUser" : {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "ID of logged-in user",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of logged-in user",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of logged-in user",
                        "example": "john.doe@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was created",
                        "example": "2023-11-01T12:34:56Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was last updated",
                        "example": "2023-11-05T15:30:00Z"
                    },
                    "token": {
                        "type": "string",
                        "description": "Authentication token",
                        "example": "abc123xyz"
                    }
                }
            }
        },
        "responses": {
            "400": {
                "description": "Validation error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The name field is required."
                                            }
                                        },
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email must be a valid email address."
                                            }
                                        },
                                        "password": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The password field is required."
                                            }
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string",
                                    "description": "General validation error message",
                                    "example": "Validation errors occurred."
                                },
                                "status": {
                                    "type": "number",
                                    "description": "Status code",
                                    "example": 400
                                }
                            },
                            "required": [
                                "errors",
                                "message",
                                "status"
                            ]
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "description": "Error message",
                                    "example": "Unauthorized User"
                                },
                                "status": {
                                    "type": "number",
                                    "description": "Status code",
                                    "example": 401
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
